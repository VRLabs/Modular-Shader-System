using System.Collections.Generic;
using UnityEngine;

namespace VRLabs.ModularShaderSystem
{
    /// <summary>
    /// The main asset used for the modular shader system, containing informations to generate a shader from modules declared here.
    /// </summary>
    [CreateAssetMenu(fileName = "ModularShader", menuName = MSSConstants.CREATE_PATH + "/Modular Shader", order = 0)]
    public class ModularShader : ScriptableObject
    {
        /// <summary>
        /// Id of the modular shader.
        /// </summary>
        public string Id;
        
        /// <summary>
        /// Name of the modular shader.
        /// </summary>
        public string Name;
        
        /// <summary>
        /// Version of the modular shader.
        /// </summary>
        public string Version;
        
        /// <summary>
        /// Author of the modular shader.
        /// </summary>
        public string Author;
        
        /// <summary>
        /// Description of the modular shader.
        /// </summary>
        public string Description;
        
        /// <summary>
        /// Toggle to define if the modular shader can use templates to declare properties.
        /// </summary>
        public bool UseTemplatesForProperties;
        
        /// <summary>
        /// Template asset for defining properties.
        /// </summary>
        public TemplateAsset ShaderPropertiesTemplate;
        
        /// <summary>
        /// Path for the shader in the shader selector.
        /// </summary>
        public string ShaderPath;
        
        /// <summary>
        /// Main template asset for the shader.
        /// </summary>
        public TemplateAsset ShaderTemplate;
        
        /// <summary>
        /// Custom editor definition.
        /// </summary>
        public string CustomEditor;
        
        /// <summary>
        /// List of properties defined.
        /// </summary>
        public List<Property> Properties;
        
        /// <summary>
        /// List of default Textures;
        /// </summary>
        public List<DefaultTexture> DefaultTextures;
        
        /// <summary>
        /// List of base modules.
        /// </summary>
        public List<ShaderModule> BaseModules;

        /// <summary>
        /// List of additional modules.
        /// </summary>
        /// <remarks>
        /// Unlike base modules, additional modules are not shown in the ui, and the list is intended to be used mainly by custom scripts.
        /// </remarks>
        [HideInInspector] public List<ShaderModule> AdditionalModules;
        
        /// <summary>
        /// Boolean to disable the base modules list edit. Can be edited by either scripts or the debug inspector.
        /// </summary>
        public bool LockBaseModules;
        
        /// <summary>
        /// List of shaders that have been last generated by this modular shader. Useful to backtrack from which modular shader a specific shader comes. 
        /// </summary>
        /// <remarks>
        /// This list is not visible in the inspector, but can be accessed by scripts.
        /// </remarks>
        public List<Shader> LastGeneratedShaders;
        
        /// <summary>
        /// string that can contain whatever you want, it is originally intended to contain serialized data that you may need for your own custom system based on the modular shader system.
        /// </summary>
        [HideInInspector] public string AdditionalSerializedData;
    }
}